https://hub.gke.mybinder.org/user/ipython-ipython-in-depth-lywng6zm/notebooks/Untitled.ipynb?kernel_name=python3#
!pip install -q tensorflow==2.0.0-alpha0
---
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout, Activation, Flatten, Conv2D, MaxPooling2D
import pickle

X = pickle.load(open("X.pickle","rb"))
y = pickle.load(open("y.pickle","rb"))

X = X/255.0

# First layer
model = Swquential()
    # Conv layer: 64 unit, window size, 
model.add( Conv2D(64, (3,3), input_shape = X.shape[1:]) )
model.add(Activation("relu"))
model.add(MaxPooling2D(pool_size(2,2)))

# Second Layer
model.add( Conv2D(64, (3,3)) )
model.add(Activation("relu"))
model.add(MaxPooling2D(pool_size(2,2)))

# Third(Dense) Layer
model.add(Flatten())
model.add(Dense(64))

# Output Layer
model.add(Dense(1))
model.add(Activation("sigmoid"))

model.compile(loss="binary_crossentrophy",
             optimizer="adam",
             metrics=["accuracy"])

# batch_size: how many at a time we want to pass
# related to the size of your data
model.fix(X, y, batch_size=32) 


model.fit(X, y, batch_size=32, epochs=10, validation_split=0.1) 
# opt(?) for the sample data, 0.1=10%




